{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ViroConstrictor \u00b6 ViroConstrictor is a pipeline designed to process raw FastQ data from amplicon-based sequencing experiments and generate a biologically correct consensus sequence of the sequenced genome. ViroConstrictor performs high speed data quality control, data cleanup and high accuracy removal of primer-sequences from NGS reads. As well as alignment of reads and generation of a consensus sequence using the TrueConsense consensus-caller which accounts for sequencing errors and alignment artefacts. ViroConstrictor is able to run both on a standalone (linux) computer, as well as High-Performance Computing (HPC) infrastructures. ViroConstrictor is compatible with Nanopore, Illumina, and IONTorrent data (fastq). Please see the installation page for download and installation instructions, and please see the user guide page page for basic usage instructions. ViroConstrictor is available under the AGPLv3 licence Authors \u00b6 Florian Zwagemaker Dennis Schmitz Karim Hajji Annelies Kroneman","title":"Home"},{"location":"#viroconstrictor","text":"ViroConstrictor is a pipeline designed to process raw FastQ data from amplicon-based sequencing experiments and generate a biologically correct consensus sequence of the sequenced genome. ViroConstrictor performs high speed data quality control, data cleanup and high accuracy removal of primer-sequences from NGS reads. As well as alignment of reads and generation of a consensus sequence using the TrueConsense consensus-caller which accounts for sequencing errors and alignment artefacts. ViroConstrictor is able to run both on a standalone (linux) computer, as well as High-Performance Computing (HPC) infrastructures. ViroConstrictor is compatible with Nanopore, Illumina, and IONTorrent data (fastq). Please see the installation page for download and installation instructions, and please see the user guide page page for basic usage instructions. ViroConstrictor is available under the AGPLv3 licence","title":"ViroConstrictor"},{"location":"#authors","text":"Florian Zwagemaker Dennis Schmitz Karim Hajji Annelies Kroneman","title":"Authors"},{"location":"amplicons/","text":"Explanation of Amplicon Types \u00b6 The \"amplicon type\" is basically a description of a PCR amplicon, and which part of said amplicon is actually sequenced. This information is important because given primers will be removed from the reads during the analysis. In the ViroConstrictor pipeline the primer-removal is done by our tool AmpliGone . The information regarding the \"amplicon type\" is required because it tells te pipeline, and therefore also AmpliGone, from which side(s) of a read the primer-sequence has to be removed. Currently there are two options: \"End-to-End\" or \"End-to-Mid\". In short: \"End-to-End\" means that the sequenced read covers the full length of an amplicon. Meaning that the primer-sequence is present at both ends of a read. \"End-to-Mid\" means that the sequences read only partially covers the length of the amplicon. Meaning that the primer-sequence is present at only one end of a read. Also see the AmpliGone documentation regarding amplicon-types where we go into more detail regarding these types and what these terms mean. Please check your sequencing and laboratory setup for the amplicon type to match your analysis to ensure the best results.","title":"Explanation of amplicon types"},{"location":"amplicons/#explanation-of-amplicon-types","text":"The \"amplicon type\" is basically a description of a PCR amplicon, and which part of said amplicon is actually sequenced. This information is important because given primers will be removed from the reads during the analysis. In the ViroConstrictor pipeline the primer-removal is done by our tool AmpliGone . The information regarding the \"amplicon type\" is required because it tells te pipeline, and therefore also AmpliGone, from which side(s) of a read the primer-sequence has to be removed. Currently there are two options: \"End-to-End\" or \"End-to-Mid\". In short: \"End-to-End\" means that the sequenced read covers the full length of an amplicon. Meaning that the primer-sequence is present at both ends of a read. \"End-to-Mid\" means that the sequences read only partially covers the length of the amplicon. Meaning that the primer-sequence is present at only one end of a read. Also see the AmpliGone documentation regarding amplicon-types where we go into more detail regarding these types and what these terms mean. Please check your sequencing and laboratory setup for the amplicon type to match your analysis to ensure the best results.","title":"Explanation of Amplicon Types"},{"location":"changelog/","text":"Changelog \u00b6 1.0.0 (2022-04-14) \u00b6 \u26a0 BREAKING CHANGES \u00b6 Use a single coverage level during analysis, defaults to 30 ( 6d6fc01 ) add support for per-sample analysis settings with an input samplesheet in Excel, TSV or CSV format ( a0b726 ) Add support for BED files in amplicon_covs ( ece3dfa ) Use BED files as output of AmpliGone ( 79fd23 ) Update to python version 3.10 in base environments. (minimal required version = 3.8) ( 184328 ) Use a single coverage level for TrueConsense ( e5701b9a ) Features \u00b6 flexible snakemake rule_all based on samplesheet inputs ( 93ad0c ) use the snakemake Paramspace for wildcard generation ( 94d1738 ) Add remove_adapters_p1 to all ( 64c9069 ) Add remove_adapters_p2 and qc_filter to all ( a89560 ) Add prepare_primers ( 6dc7c9 ) Add prepare_gff rule ( a0bc0fb ) Re-add ampligone ( 89cc2a0 ) Re-add qc_post to multiqc ( 45c0d12 ) Re-add TrueConsense ( 44f36c1 ) Re-add concat_seq ( ab229de ) Re-add tsv output ( 5bf10aa ) Re-add breadth of coverage to snakefile ( 003b2f ) Re-add amplicon_cov ( 6f6088 ) Correctly handle missing inputs in samplesheet ( aa6995 ) re-add illumina support in new workflow structure ( 8eb400 ) add fastP stats to multiqc report ( 19627f ) Bug Fixes \u00b6 Add option to not give primers on cli ( e4c054c ) Check combination of samplesheet and cli args ( e4c054c ) Fix broken snakefile ( a704c5e ) Add .bed as filetype for primers ( f16556 ) Make prodigal and prepare_gff unique ( 761337 ) Fix aggregation outputs to rule all ( 2269340 ) Fix restructuring of results folder ( 76fda46 ) group concatenated files in correct results subfolders ( f3f1d9e ) Make sure all post_qc is added in multiqc ( b51f0ce ) Remove excess bracket in various log&bench rules ( 4a5e96c ) add logs for calculate_amplicon_cov rule ( fbd2c1c ) always use absolute path for input reference, primer and features files ( fa68a7a ) always provide absolute path for input fastq files ( 0303244 ) Raise error if fasta contains invalid char ( 5209a7b ) Bump minimum snakemake version ( a31b503 ) change multiqc memory requirements to 'high' ( 05b9db3 ) filter input primer bedfile to only output matching refID bedfile ( c2b9c0c ) Code Refactoring \u00b6 move version to init file ( e4c054c ) Remove empty.primers ( bfe0044 ) use the snakemake Paramspace wildcards in the multiQC aggregation ( 1204b09 ) add the \"extract_refs.py\" script to repo ( 5a7ea4 ) move multiqc input function to top of snakefile ( 1134bb ) use new prepare_primers rule in new structure ( 4d06939 ) use new prepare_gffs rule with the new structure ( 537d09 ) add basic gff filter script ( 09ada9 ) Refactor with bottum up approach ( 682cafa ) Rename Sample to sample ( a6c0e48 ) Change to wc_pattern ( 214e21 ) Switch wc_pattern to wc_folder ( 40d4d2e ) Remove threads: 1 as it is default ( 5cd6ca6 ) Make wildcard notation consistent ( 8fe4f7e ) Re-ordering of code ( b3d891 ) Remove mincov variable in snakefile ( 5bb47a9 ) change used fonts in the generated report to accomodate fpdf2 ( 5bb91d1 ) merge if statement blocks to singular condition ( 7b2882f ) simplify boolean returns ( 615d2cf ) use new expression for conditional in samplesheet generator ( 8ca585a ) Dependencies \u00b6 update AmpliGone to version 1.0.1 ( e4c054c ) update TrueConsense version to v0.4.0 ( e4c054c ) use Pypi for AmpliGone installation instead of building from source ( e4c054c ) add python3.7 to the Alignment env for improved env-stability ( d87c746 ) update snakemake to lenient version 7.3 ( 56d8fe ) Documentation \u00b6 Add information for primer bed support ( e4c054c ) update docs for multi-target analysis ( e4c054c ) update documentation for new ViroConstrictor functions ( e4c054c ) update installation command for python3.10 ( e4c054c ) update documentation index page with correct required snakemake version ( e4c054c ) Add explanatory docstring to CheckSampleProperties function ( 4a552ad ) Add explanatory docstrings to all functions in ViroConstrictor.parser ( b09f4d ) Add explanatory docstrings to all functions in ViroConstrictor.runconfigs ( 2ff8185 ) Add explanatory docstrings to all functions in ViroConstrictor.samplesheet ( a1e7093 ) Add explanatory docstrings to all functions in ViroConstrictor.userprofile ( 30ec8af8 ) Add explanatory docstrings to all functions in ViroConstrictor.validatefasta ( c199d7c9 ) Add error message for samplesheet duplicates ( efa0761 ) 0.4.2 (2022-04-12) \u00b6 Bug Fixes \u00b6 limit the self-updater to only update minor and patch versions ( f864f55 ) 0.4.1 (2022-03-08) \u00b6 Bug Fixes \u00b6 correct the memory assignment and threads for RemovePrimers job when no primers are given ( a9ebe02 ) 0.4.0 (2022-02-04) \u00b6 Features \u00b6 add an adjustable mismatch rate for the primer search ( 7fc4265 ) dynamically set usable cpus/threads in local execution mode ( 1ec85bb ) Write a short report with the used/configured settings of the analysis ( 0c46366 ) Bug Fixes \u00b6 add missing --skip-updates flag ( f360161 ) corrected update function parameters ( 7f37d90 ) finish an analysis when empty input fastq files are given ( d178587 ) properly exit with right exit codes and print closing message ( f1bbe13 ) Performance Improvements \u00b6 tweak read qc filtering settings ( b3aab5a ) use adjusted mm2 mapping settings in nanopore-mode ( c027daa ) Dependencies \u00b6 add FPDF version 1.7.2 to dependency lists ( cfcd9ee ) add lenient version requirements to mamba ( 07ebfcc ) add urllib3 v1.26 to dependency list for the auto-updater ( cfcd9ee ) change biopython version in python setupfile ( 07ebfcc ) change pysam to lenient versioning ( cfcd9ee ) inlcude conda (lenient) version 4.11.x in main env for compatibility ( cfcd9ee ) pin pysamstats version to 1.1.2 ( cfcd9ee ) pin tqdm (lenient) version to 4.62.x ( cfcd9ee ) pin TrueConsense to version 0.3.0 ( cfcd9ee ) remove pysamstats from 'clean' environment ( cfcd9ee ) update AmpliGone 0.4.0 \u2192 0.4.1 ( ea06728 ) update AmpliGone 0.4.1 \u2192 0.4.3 ( af62d22 ) update AmpliGone version 0.2.3 \u2192 0.4.0 ( cfcd9ee ) update bcftools 1.12 \u2192 1.14 ( cfcd9ee ) update bedtools 2.29.2 \u2192 2.30.0 ( cfcd9ee ) update biopython 1.78 \u2192 1.79 ( cfcd9ee ) update fastp 0.20.1 \u2192 0.23.2 ( cfcd9ee ) update fastqc 0.11.8 \u2192 0.11.9 ( cfcd9ee ) update minimap2 & mappy 2.17 \u2192 2.24 ( cfcd9ee ) update multiqc 1.9 \u2192 1.11 ( cfcd9ee ) update pandas 1.2.3 \u2192 1.3.5 ( cfcd9ee ) update parmap 1.5.2 \u2192 1.5.3 ( cfcd9ee ) update PyYaml 5.4.1 \u2192 6.0 ( cfcd9ee ) update samtools 1.11 \u2192 1.14 ( cfcd9ee ) update seqkit 0.14.0 \u2192 2.1.0 ( cfcd9ee ) update snakemake 6.4.1 \u2192 6.13.1 ( cfcd9ee ) Documentation \u00b6 add importance of primer name and number to docs ( 7107398 ) include primer mismatch rate flag to documentation ( 531f526 ) update installation instructions ( 5944d22 ) 0.3.0 (2021-11-15) \u00b6 Features \u00b6 allow ViroConstrictor to update itself to latest release ( 11ad616 ) flexible memory requirements per workflow job ( 7c189cd ) Bug Fixes \u00b6 change consensus calling to a 'mid' cpu-task ( 3094b78 ) 0.2.3 (2021-11-03) \u00b6 Documentation \u00b6 add explanatory comments to docs config ( f3e05ec ) 0.2.2 (2021-11-03) \u00b6 Bug Fixes \u00b6 change amplicon covs script to complete with empty input #5 ( 6900638 ) complete workflow with primers set to NONE ( 47becf8 ) use 'map-ont' mm2 preset in nanopore workflow ( f89d5cf )","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#100-2022-04-14","text":"","title":"1.0.0 (2022-04-14)"},{"location":"changelog/#breaking-changes","text":"Use a single coverage level during analysis, defaults to 30 ( 6d6fc01 ) add support for per-sample analysis settings with an input samplesheet in Excel, TSV or CSV format ( a0b726 ) Add support for BED files in amplicon_covs ( ece3dfa ) Use BED files as output of AmpliGone ( 79fd23 ) Update to python version 3.10 in base environments. (minimal required version = 3.8) ( 184328 ) Use a single coverage level for TrueConsense ( e5701b9a )","title":"\u26a0 BREAKING CHANGES"},{"location":"changelog/#features","text":"flexible snakemake rule_all based on samplesheet inputs ( 93ad0c ) use the snakemake Paramspace for wildcard generation ( 94d1738 ) Add remove_adapters_p1 to all ( 64c9069 ) Add remove_adapters_p2 and qc_filter to all ( a89560 ) Add prepare_primers ( 6dc7c9 ) Add prepare_gff rule ( a0bc0fb ) Re-add ampligone ( 89cc2a0 ) Re-add qc_post to multiqc ( 45c0d12 ) Re-add TrueConsense ( 44f36c1 ) Re-add concat_seq ( ab229de ) Re-add tsv output ( 5bf10aa ) Re-add breadth of coverage to snakefile ( 003b2f ) Re-add amplicon_cov ( 6f6088 ) Correctly handle missing inputs in samplesheet ( aa6995 ) re-add illumina support in new workflow structure ( 8eb400 ) add fastP stats to multiqc report ( 19627f )","title":"Features"},{"location":"changelog/#bug-fixes","text":"Add option to not give primers on cli ( e4c054c ) Check combination of samplesheet and cli args ( e4c054c ) Fix broken snakefile ( a704c5e ) Add .bed as filetype for primers ( f16556 ) Make prodigal and prepare_gff unique ( 761337 ) Fix aggregation outputs to rule all ( 2269340 ) Fix restructuring of results folder ( 76fda46 ) group concatenated files in correct results subfolders ( f3f1d9e ) Make sure all post_qc is added in multiqc ( b51f0ce ) Remove excess bracket in various log&bench rules ( 4a5e96c ) add logs for calculate_amplicon_cov rule ( fbd2c1c ) always use absolute path for input reference, primer and features files ( fa68a7a ) always provide absolute path for input fastq files ( 0303244 ) Raise error if fasta contains invalid char ( 5209a7b ) Bump minimum snakemake version ( a31b503 ) change multiqc memory requirements to 'high' ( 05b9db3 ) filter input primer bedfile to only output matching refID bedfile ( c2b9c0c )","title":"Bug Fixes"},{"location":"changelog/#code-refactoring","text":"move version to init file ( e4c054c ) Remove empty.primers ( bfe0044 ) use the snakemake Paramspace wildcards in the multiQC aggregation ( 1204b09 ) add the \"extract_refs.py\" script to repo ( 5a7ea4 ) move multiqc input function to top of snakefile ( 1134bb ) use new prepare_primers rule in new structure ( 4d06939 ) use new prepare_gffs rule with the new structure ( 537d09 ) add basic gff filter script ( 09ada9 ) Refactor with bottum up approach ( 682cafa ) Rename Sample to sample ( a6c0e48 ) Change to wc_pattern ( 214e21 ) Switch wc_pattern to wc_folder ( 40d4d2e ) Remove threads: 1 as it is default ( 5cd6ca6 ) Make wildcard notation consistent ( 8fe4f7e ) Re-ordering of code ( b3d891 ) Remove mincov variable in snakefile ( 5bb47a9 ) change used fonts in the generated report to accomodate fpdf2 ( 5bb91d1 ) merge if statement blocks to singular condition ( 7b2882f ) simplify boolean returns ( 615d2cf ) use new expression for conditional in samplesheet generator ( 8ca585a )","title":"Code Refactoring"},{"location":"changelog/#dependencies","text":"update AmpliGone to version 1.0.1 ( e4c054c ) update TrueConsense version to v0.4.0 ( e4c054c ) use Pypi for AmpliGone installation instead of building from source ( e4c054c ) add python3.7 to the Alignment env for improved env-stability ( d87c746 ) update snakemake to lenient version 7.3 ( 56d8fe )","title":"Dependencies"},{"location":"changelog/#documentation","text":"Add information for primer bed support ( e4c054c ) update docs for multi-target analysis ( e4c054c ) update documentation for new ViroConstrictor functions ( e4c054c ) update installation command for python3.10 ( e4c054c ) update documentation index page with correct required snakemake version ( e4c054c ) Add explanatory docstring to CheckSampleProperties function ( 4a552ad ) Add explanatory docstrings to all functions in ViroConstrictor.parser ( b09f4d ) Add explanatory docstrings to all functions in ViroConstrictor.runconfigs ( 2ff8185 ) Add explanatory docstrings to all functions in ViroConstrictor.samplesheet ( a1e7093 ) Add explanatory docstrings to all functions in ViroConstrictor.userprofile ( 30ec8af8 ) Add explanatory docstrings to all functions in ViroConstrictor.validatefasta ( c199d7c9 ) Add error message for samplesheet duplicates ( efa0761 )","title":"Documentation"},{"location":"changelog/#042-2022-04-12","text":"","title":"0.4.2 (2022-04-12)"},{"location":"changelog/#bug-fixes_1","text":"limit the self-updater to only update minor and patch versions ( f864f55 )","title":"Bug Fixes"},{"location":"changelog/#041-2022-03-08","text":"","title":"0.4.1 (2022-03-08)"},{"location":"changelog/#bug-fixes_2","text":"correct the memory assignment and threads for RemovePrimers job when no primers are given ( a9ebe02 )","title":"Bug Fixes"},{"location":"changelog/#040-2022-02-04","text":"","title":"0.4.0 (2022-02-04)"},{"location":"changelog/#features_1","text":"add an adjustable mismatch rate for the primer search ( 7fc4265 ) dynamically set usable cpus/threads in local execution mode ( 1ec85bb ) Write a short report with the used/configured settings of the analysis ( 0c46366 )","title":"Features"},{"location":"changelog/#bug-fixes_3","text":"add missing --skip-updates flag ( f360161 ) corrected update function parameters ( 7f37d90 ) finish an analysis when empty input fastq files are given ( d178587 ) properly exit with right exit codes and print closing message ( f1bbe13 )","title":"Bug Fixes"},{"location":"changelog/#performance-improvements","text":"tweak read qc filtering settings ( b3aab5a ) use adjusted mm2 mapping settings in nanopore-mode ( c027daa )","title":"Performance Improvements"},{"location":"changelog/#dependencies_1","text":"add FPDF version 1.7.2 to dependency lists ( cfcd9ee ) add lenient version requirements to mamba ( 07ebfcc ) add urllib3 v1.26 to dependency list for the auto-updater ( cfcd9ee ) change biopython version in python setupfile ( 07ebfcc ) change pysam to lenient versioning ( cfcd9ee ) inlcude conda (lenient) version 4.11.x in main env for compatibility ( cfcd9ee ) pin pysamstats version to 1.1.2 ( cfcd9ee ) pin tqdm (lenient) version to 4.62.x ( cfcd9ee ) pin TrueConsense to version 0.3.0 ( cfcd9ee ) remove pysamstats from 'clean' environment ( cfcd9ee ) update AmpliGone 0.4.0 \u2192 0.4.1 ( ea06728 ) update AmpliGone 0.4.1 \u2192 0.4.3 ( af62d22 ) update AmpliGone version 0.2.3 \u2192 0.4.0 ( cfcd9ee ) update bcftools 1.12 \u2192 1.14 ( cfcd9ee ) update bedtools 2.29.2 \u2192 2.30.0 ( cfcd9ee ) update biopython 1.78 \u2192 1.79 ( cfcd9ee ) update fastp 0.20.1 \u2192 0.23.2 ( cfcd9ee ) update fastqc 0.11.8 \u2192 0.11.9 ( cfcd9ee ) update minimap2 & mappy 2.17 \u2192 2.24 ( cfcd9ee ) update multiqc 1.9 \u2192 1.11 ( cfcd9ee ) update pandas 1.2.3 \u2192 1.3.5 ( cfcd9ee ) update parmap 1.5.2 \u2192 1.5.3 ( cfcd9ee ) update PyYaml 5.4.1 \u2192 6.0 ( cfcd9ee ) update samtools 1.11 \u2192 1.14 ( cfcd9ee ) update seqkit 0.14.0 \u2192 2.1.0 ( cfcd9ee ) update snakemake 6.4.1 \u2192 6.13.1 ( cfcd9ee )","title":"Dependencies"},{"location":"changelog/#documentation_1","text":"add importance of primer name and number to docs ( 7107398 ) include primer mismatch rate flag to documentation ( 531f526 ) update installation instructions ( 5944d22 )","title":"Documentation"},{"location":"changelog/#030-2021-11-15","text":"","title":"0.3.0 (2021-11-15)"},{"location":"changelog/#features_2","text":"allow ViroConstrictor to update itself to latest release ( 11ad616 ) flexible memory requirements per workflow job ( 7c189cd )","title":"Features"},{"location":"changelog/#bug-fixes_4","text":"change consensus calling to a 'mid' cpu-task ( 3094b78 )","title":"Bug Fixes"},{"location":"changelog/#023-2021-11-03","text":"","title":"0.2.3 (2021-11-03)"},{"location":"changelog/#documentation_2","text":"add explanatory comments to docs config ( f3e05ec )","title":"Documentation"},{"location":"changelog/#022-2021-11-03","text":"","title":"0.2.2 (2021-11-03)"},{"location":"changelog/#bug-fixes_5","text":"change amplicon covs script to complete with empty input #5 ( 6900638 ) complete workflow with primers set to NONE ( 47becf8 ) use 'map-ont' mm2 preset in nanopore workflow ( f89d5cf )","title":"Bug Fixes"},{"location":"global-config/","text":"Configuration options \u00b6 When you first run ViroConstrictor you will be asked to set some global configuration settings. These settings are used every time you execute ViroConstrictor and tell the application how the analysis, or even the entire application, should behave. There's two main sections of global configuration that need to be set up: The computing settings which ViroConstrictor will use when running the analysis. The updating-behavior of the ViroConstrictor application. ViroConstrictor will store the information you provide during this first setup so you won't have to provide this information every time you run an analysis. Setting up computing settings \u00b6 You will be asked to provide the information which tells ViroConstrictor where the actual analysis should be executed. ViroConstrictor is able to run both on your local (linux) machine as well as High Performace Computing (HPC/grid) infrastructures. You will therefore be asked in which computing-mode you want ViroConstrictor to run. The options are local or grid mode. What is local execution mode? Local execution mode means that every step of the ViroConstrictor analysis will be performed on the computer where you turned on said analysis. Use this option when you're running ViroConstrictor on your own computer or if you don't know if your analysis environment has a grid infrastructure. What is grid execution mode? Grid execution mode means that every step of the ViroConstrictor analysis will be performed on other computers within the computing-infrastructure. This allows a large amount of analysis steps to be performed in parallel. If you choose the grid computing-mode then you'll be asked a follow up question regarding the computing-queue. High Performance Computing infrastructures are often set up with task-queues for its users. With these queues it's possible to determine on which (remote) computers the various analysis tasks will be executed and which tasks have priority over other types of tasks. You will therefore be asked to provide the name of the computing-queue that you wish to use during analysis with ViroConstrictor. If you don't know the computing-queue then please check with your system administrator beforehand. Updating settings \u00b6 ViroConstrictor is able to update itself to newer minor and patch versions. During the initial configuration setup you will be asked your preferences regarding the auto-updating features. When auto-updating is enabled, ViroConstrictor will update itself to the latest possible version without asking you first. When this setting is enabled then ViroConstrictor will only let you know it has updated to the latest possible version, or when it was unable to update itself to the latest version. If you choose to disable auto-updating during the configuration then you'll get a follow-up question if instead of completely automatic updates you wish to be asked to update to the latest version. For most use-cases, this is the preferred option where you can still have ViroConstrictor update itself but you stay in control of the used version.","title":"Global configuration"},{"location":"global-config/#configuration-options","text":"When you first run ViroConstrictor you will be asked to set some global configuration settings. These settings are used every time you execute ViroConstrictor and tell the application how the analysis, or even the entire application, should behave. There's two main sections of global configuration that need to be set up: The computing settings which ViroConstrictor will use when running the analysis. The updating-behavior of the ViroConstrictor application. ViroConstrictor will store the information you provide during this first setup so you won't have to provide this information every time you run an analysis.","title":"Configuration options"},{"location":"global-config/#setting-up-computing-settings","text":"You will be asked to provide the information which tells ViroConstrictor where the actual analysis should be executed. ViroConstrictor is able to run both on your local (linux) machine as well as High Performace Computing (HPC/grid) infrastructures. You will therefore be asked in which computing-mode you want ViroConstrictor to run. The options are local or grid mode. What is local execution mode? Local execution mode means that every step of the ViroConstrictor analysis will be performed on the computer where you turned on said analysis. Use this option when you're running ViroConstrictor on your own computer or if you don't know if your analysis environment has a grid infrastructure. What is grid execution mode? Grid execution mode means that every step of the ViroConstrictor analysis will be performed on other computers within the computing-infrastructure. This allows a large amount of analysis steps to be performed in parallel. If you choose the grid computing-mode then you'll be asked a follow up question regarding the computing-queue. High Performance Computing infrastructures are often set up with task-queues for its users. With these queues it's possible to determine on which (remote) computers the various analysis tasks will be executed and which tasks have priority over other types of tasks. You will therefore be asked to provide the name of the computing-queue that you wish to use during analysis with ViroConstrictor. If you don't know the computing-queue then please check with your system administrator beforehand.","title":"Setting up computing settings"},{"location":"global-config/#updating-settings","text":"ViroConstrictor is able to update itself to newer minor and patch versions. During the initial configuration setup you will be asked your preferences regarding the auto-updating features. When auto-updating is enabled, ViroConstrictor will update itself to the latest possible version without asking you first. When this setting is enabled then ViroConstrictor will only let you know it has updated to the latest possible version, or when it was unable to update itself to the latest version. If you choose to disable auto-updating during the configuration then you'll get a follow-up question if instead of completely automatic updates you wish to be asked to update to the latest version. For most use-cases, this is the preferred option where you can still have ViroConstrictor update itself but you stay in control of the used version.","title":"Updating settings"},{"location":"installation/","text":"Installation \u00b6 ViroConstrictor is only available on Linux (or Linux-based) operating systems. MacOS may also work but is not tested. ViroConstrictor will not work on Windows. Download and installation instructions through Conda will be made available as soon as possible. Until then, please perform manual installation as described on this page below. Download \u00b6 Use the following command to download the latest release of ViroConstrictor and move to the newly downloaded ViroConstrictor/ directory: git clone https://github.com/RIVM-bioinformatics/ViroConstrictor.git ; cd ViroConstrictor ; git checkout tags/ $( git tag --sort = committerdate | tail -1 ) >> /dev/null Tip If you want to download a specific version of ViroConstrictor then please use the following command below where you replace {VERSION} with the version that you want. git clone --depth 1 -b { VERSION } https://github.com/RIVM-bioinformatics/ViroConstrictor.git ; cd ViroConstrictor Installation \u00b6 Before you install ViroConstrictor, make sure Conda is installed on your system and functioning properly! Create the required conda-environment and install the necessary dependencies. Copy and paste the code-snippet below to create the new conda-environment and directly activate it. conda create --name ViroConstrictor -c conda-forge mamba python = 3 .10 -y ; conda activate ViroConstrictor ; mamba env update -f mamba-env.yaml Click here if that code-snippet did not work for you if you get errors from Conda, you can also try the following command(s): conda env create -f env.yml && conda activate ViroConstrictor The \"ViroConstrictor\" environment should now be active You can now actually install ViroConstrictor on your system with: pip install . Click here if that command did not work for you If you get errors from pip , you can also try the following command: python setup.py install ViroConstrictor is now installed! You can start ViroConstrictor from anywhere on your system as long as the ViroConstrictor conda-environment is active. You can also use the ViroConstrictor pipeline in a different conda-environment as long as the software dependencies match.","title":"Download & installation"},{"location":"installation/#installation","text":"ViroConstrictor is only available on Linux (or Linux-based) operating systems. MacOS may also work but is not tested. ViroConstrictor will not work on Windows. Download and installation instructions through Conda will be made available as soon as possible. Until then, please perform manual installation as described on this page below.","title":"Installation"},{"location":"installation/#download","text":"Use the following command to download the latest release of ViroConstrictor and move to the newly downloaded ViroConstrictor/ directory: git clone https://github.com/RIVM-bioinformatics/ViroConstrictor.git ; cd ViroConstrictor ; git checkout tags/ $( git tag --sort = committerdate | tail -1 ) >> /dev/null Tip If you want to download a specific version of ViroConstrictor then please use the following command below where you replace {VERSION} with the version that you want. git clone --depth 1 -b { VERSION } https://github.com/RIVM-bioinformatics/ViroConstrictor.git ; cd ViroConstrictor","title":"Download"},{"location":"installation/#installation_1","text":"Before you install ViroConstrictor, make sure Conda is installed on your system and functioning properly! Create the required conda-environment and install the necessary dependencies. Copy and paste the code-snippet below to create the new conda-environment and directly activate it. conda create --name ViroConstrictor -c conda-forge mamba python = 3 .10 -y ; conda activate ViroConstrictor ; mamba env update -f mamba-env.yaml Click here if that code-snippet did not work for you if you get errors from Conda, you can also try the following command(s): conda env create -f env.yml && conda activate ViroConstrictor The \"ViroConstrictor\" environment should now be active You can now actually install ViroConstrictor on your system with: pip install . Click here if that command did not work for you If you get errors from pip , you can also try the following command: python setup.py install ViroConstrictor is now installed! You can start ViroConstrictor from anywhere on your system as long as the ViroConstrictor conda-environment is active. You can also use the ViroConstrictor pipeline in a different conda-environment as long as the software dependencies match.","title":"Installation"},{"location":"manual/","text":"Starting an analysis \u00b6 Once ViroConstrictor is installed you can use it to analyse your NGS FastQ data. You can run an analysis in two ways: A single-target analysis with run-wide parameters (the information that you give is applied to every sample in the analysis) A multi-target analysis where you provide a samplesheet (in excel, .csv or .tsv format) which contains information to run the analysis with different settings for every sample. Please see viroconstrictor -h for all command-line options Overview of command-line options \u00b6 Below, you can find a brief summary if all available command line options and their meaning. Command Argument Explanation --input / -i [input directory] This is the folder containing your input fastq files. Both absolute as relative paths are supported. --output / -o [output directory] This is the desired output folder with all data and results. If the desired folder doesn't exist yet then it will be created. --reference / -ref [reference fasta] Input reference sequence genome in FASTA format --primers / -pr [primer fasta] / NONE Used primer sequences in FASTA format. Use NONE if your sequencing protocol does not use primers --features / -gff [GFF file] / NONE The GFF3 file containing the genomic features (open reading frames etc.) matching the given reference fasta. Use NONE if you don't have access to a GFF3 file containing this information. --platform nanopore / illumina / iontorrent The sequencing platform that was used to generate the dataset. Either being 'nanopore', 'illumina' or 'iontorrent'. Default is nanopore --amplicon-type / -at end-to-end / end-to-mid The amplicon type that matches your sequencing experiment/protocol. Either being end-to-end or end-to-mid --min-coverage / -mc Minimum coverage The minimum coverage for the consensus sequence(s) Default is 30 --primer-mismatch-rate / -pmr Fraction of maximum primer mismatches The maximum percentage mismatches that is tolerated during the primer search. Mismatches are counted in substitutions between primer and reference. Insertions and/or deletions are not taken into account. Default is 0.1 (10%) This means that max 10% of the length of a primer may be a mismatch, i.e. if your primer is 30nt then maximum 3 mismatches are allowed --target Name of the viral target The basic descriptive name of the viral target that is being analysed i.e. \"Measles\", \"Sars-CoV-2\", \"HPV16\", or \"Influenza_A\" --threads / -t Amount of threads Number of local threads that are available to use. Default is the number of available threads in your system --dryrun N/A Run the ViroConstrictor workflow without actually doing anything. (default: False) --version / -v N/A Shows the current version of ViroConstrictor and exits --help / -h N/A Show the ViroConstrictor help document and exits Run a single-target analysis \u00b6 When running ViroConstrictor as a single-target analysis its possible to provide all necessary information via the command line. The given information will be applied to all samples in the analysis. To run an analysis, you need to provide the following inputs/information: The input directory containing your FastQ data via the --input / -i flag The desired output directory for results and data via the --output / -o flag The path to a reference fasta file via the --reference / -ref flag Used sequencing primers in correct fasta format or as a bed-file via the --primers / -pr flag If you did not use any primers during your sequencing run then provide --primers NONE on the command line A GFF file containing the genomic features of the given reference file via the --features / -gff flag If you don't have access to a GFF file with genomic features matching the reference then provide --features NONE . ViroConstrictor will then attempt to guess the genomic features of the given reference during analysis. The used sequencing platform via --platform , can be \"nanopore\", \"illumina\", or \"iontorrent\" The Amplicon-type in your provided data via the --amplicon-type / -at flag. If you did not use any primers, and set --primers NONE then this information will be ignored (you still have to provide this command-line flag but it won't be used) A named viral target. Additional information that you can provide, but is not always required is the minimum coverage level ( --min-coverage ) as well as the primer-mismatch rate ( --primer-mismatch-rate ). When these flags are not provided then their default values are used during analysis. You can start a single-target analysis with a command such as the following: viroconstrictor \\ --input { path/to/FastQ-files } \\ --output { path/to/desired/output/folder } \\ --reference { path/to/reference.fasta / NONE } \\ --primers { path/to/primers.fasta / NONE } \\ --features { path/to/features.gff / NONE } \\ --platform { nanopore/illumina/iontorrent } \\ --amplicon-type { end-to-end/end-to-mid } \\ --min-coverage { coverage level } \\ --primer-mismatch-rate { mismatch rate } \\ --target viral-target Run a multi-target analysis \u00b6 When running ViroConstrictor for multiple targets in a single analysis. Or if you want to set different analysis settings for every sample then you can run ViroConstrictor in multi-target analysis mode. A single analysis with different settings for each sample can be started by providing a samplesheet in Excel, CSV or TSV format. An example table can be seen below, or download the example excel spreadsheet here Sample Virus Match-ref Primers Reference Features min-coverage primer-mismatch-rate Sample_1 SARS-CoV-2 FALSE /path/to/sars_cov_2_primers.fasta /path/to/sars_cov_2_reference.fasta /path/to/sars_cov_2.gff 50 0.1 Sample_2 Measles TRUE /path/to/Measles_primers.fasta /path/to/measles_reference.fasta /path/to/measles.gff 30 0.15 Sample_3 Influenza_A FALSE /path/to/Influenza-A_primers.fasta /path/to/Influenza-A_reference.fasta NONE 30 0.1 Sample_4 HPV TRUE NONE /path/to/HPV_reference.fasta NONE 10 0.1 Attention Currently the Match-ref setting as portrayed in the table above as well as in the example spreadsheet is currently not yet implemented. This is a future functionality that is still being worked on, but we decided to include it already in the samplesheet and command-line arguments as we don't want to significantly change these formats going forward (unless actually deemed necessary). Setting the Match-ref to TRUE as in the example above will therefore not do anything in the analysis as per the current version. Please keep in mind that the Sample key as given in de samplesheet must correspond with the FastQ filename in your input directory. If this isn't the case then ViroConstrictor will let you know without running to ensure you won't get unexplainable data. You can start a multi-target analysis with a command such as the following viroconstrictor \\ --input { path/to/FastQ-files } \\ --output { path/to/desired/output/folder } \\ --samplesheet { path/to/samplesheet.xlsx } \\ --platform { nanopore/illumina/iontorrent } \\ --amplicon-type { end-to-end/end-to-mid } With a multi-target analysis it's also possible to combine run-wide parameters with a samplesheet. For example, you wish to analyse a batch of samples and set different minimum coverage values for every sample, but all other parameters in your analysis are the same. You can then leave out certain information in your samplesheet and supplement this information through the command line. Please note that in the given samplesheet, the columns \"Samples\", \"Virus\", and \"Reference\" are considered to be mandatory. starting an analysis without this information in the samplesheet will not work.","title":"Starting an analysis"},{"location":"manual/#starting-an-analysis","text":"Once ViroConstrictor is installed you can use it to analyse your NGS FastQ data. You can run an analysis in two ways: A single-target analysis with run-wide parameters (the information that you give is applied to every sample in the analysis) A multi-target analysis where you provide a samplesheet (in excel, .csv or .tsv format) which contains information to run the analysis with different settings for every sample. Please see viroconstrictor -h for all command-line options","title":"Starting an analysis"},{"location":"manual/#overview-of-command-line-options","text":"Below, you can find a brief summary if all available command line options and their meaning. Command Argument Explanation --input / -i [input directory] This is the folder containing your input fastq files. Both absolute as relative paths are supported. --output / -o [output directory] This is the desired output folder with all data and results. If the desired folder doesn't exist yet then it will be created. --reference / -ref [reference fasta] Input reference sequence genome in FASTA format --primers / -pr [primer fasta] / NONE Used primer sequences in FASTA format. Use NONE if your sequencing protocol does not use primers --features / -gff [GFF file] / NONE The GFF3 file containing the genomic features (open reading frames etc.) matching the given reference fasta. Use NONE if you don't have access to a GFF3 file containing this information. --platform nanopore / illumina / iontorrent The sequencing platform that was used to generate the dataset. Either being 'nanopore', 'illumina' or 'iontorrent'. Default is nanopore --amplicon-type / -at end-to-end / end-to-mid The amplicon type that matches your sequencing experiment/protocol. Either being end-to-end or end-to-mid --min-coverage / -mc Minimum coverage The minimum coverage for the consensus sequence(s) Default is 30 --primer-mismatch-rate / -pmr Fraction of maximum primer mismatches The maximum percentage mismatches that is tolerated during the primer search. Mismatches are counted in substitutions between primer and reference. Insertions and/or deletions are not taken into account. Default is 0.1 (10%) This means that max 10% of the length of a primer may be a mismatch, i.e. if your primer is 30nt then maximum 3 mismatches are allowed --target Name of the viral target The basic descriptive name of the viral target that is being analysed i.e. \"Measles\", \"Sars-CoV-2\", \"HPV16\", or \"Influenza_A\" --threads / -t Amount of threads Number of local threads that are available to use. Default is the number of available threads in your system --dryrun N/A Run the ViroConstrictor workflow without actually doing anything. (default: False) --version / -v N/A Shows the current version of ViroConstrictor and exits --help / -h N/A Show the ViroConstrictor help document and exits","title":"Overview of command-line options"},{"location":"manual/#run-a-single-target-analysis","text":"When running ViroConstrictor as a single-target analysis its possible to provide all necessary information via the command line. The given information will be applied to all samples in the analysis. To run an analysis, you need to provide the following inputs/information: The input directory containing your FastQ data via the --input / -i flag The desired output directory for results and data via the --output / -o flag The path to a reference fasta file via the --reference / -ref flag Used sequencing primers in correct fasta format or as a bed-file via the --primers / -pr flag If you did not use any primers during your sequencing run then provide --primers NONE on the command line A GFF file containing the genomic features of the given reference file via the --features / -gff flag If you don't have access to a GFF file with genomic features matching the reference then provide --features NONE . ViroConstrictor will then attempt to guess the genomic features of the given reference during analysis. The used sequencing platform via --platform , can be \"nanopore\", \"illumina\", or \"iontorrent\" The Amplicon-type in your provided data via the --amplicon-type / -at flag. If you did not use any primers, and set --primers NONE then this information will be ignored (you still have to provide this command-line flag but it won't be used) A named viral target. Additional information that you can provide, but is not always required is the minimum coverage level ( --min-coverage ) as well as the primer-mismatch rate ( --primer-mismatch-rate ). When these flags are not provided then their default values are used during analysis. You can start a single-target analysis with a command such as the following: viroconstrictor \\ --input { path/to/FastQ-files } \\ --output { path/to/desired/output/folder } \\ --reference { path/to/reference.fasta / NONE } \\ --primers { path/to/primers.fasta / NONE } \\ --features { path/to/features.gff / NONE } \\ --platform { nanopore/illumina/iontorrent } \\ --amplicon-type { end-to-end/end-to-mid } \\ --min-coverage { coverage level } \\ --primer-mismatch-rate { mismatch rate } \\ --target viral-target","title":"Run a single-target analysis"},{"location":"manual/#run-a-multi-target-analysis","text":"When running ViroConstrictor for multiple targets in a single analysis. Or if you want to set different analysis settings for every sample then you can run ViroConstrictor in multi-target analysis mode. A single analysis with different settings for each sample can be started by providing a samplesheet in Excel, CSV or TSV format. An example table can be seen below, or download the example excel spreadsheet here Sample Virus Match-ref Primers Reference Features min-coverage primer-mismatch-rate Sample_1 SARS-CoV-2 FALSE /path/to/sars_cov_2_primers.fasta /path/to/sars_cov_2_reference.fasta /path/to/sars_cov_2.gff 50 0.1 Sample_2 Measles TRUE /path/to/Measles_primers.fasta /path/to/measles_reference.fasta /path/to/measles.gff 30 0.15 Sample_3 Influenza_A FALSE /path/to/Influenza-A_primers.fasta /path/to/Influenza-A_reference.fasta NONE 30 0.1 Sample_4 HPV TRUE NONE /path/to/HPV_reference.fasta NONE 10 0.1 Attention Currently the Match-ref setting as portrayed in the table above as well as in the example spreadsheet is currently not yet implemented. This is a future functionality that is still being worked on, but we decided to include it already in the samplesheet and command-line arguments as we don't want to significantly change these formats going forward (unless actually deemed necessary). Setting the Match-ref to TRUE as in the example above will therefore not do anything in the analysis as per the current version. Please keep in mind that the Sample key as given in de samplesheet must correspond with the FastQ filename in your input directory. If this isn't the case then ViroConstrictor will let you know without running to ensure you won't get unexplainable data. You can start a multi-target analysis with a command such as the following viroconstrictor \\ --input { path/to/FastQ-files } \\ --output { path/to/desired/output/folder } \\ --samplesheet { path/to/samplesheet.xlsx } \\ --platform { nanopore/illumina/iontorrent } \\ --amplicon-type { end-to-end/end-to-mid } With a multi-target analysis it's also possible to combine run-wide parameters with a samplesheet. For example, you wish to analyse a batch of samples and set different minimum coverage values for every sample, but all other parameters in your analysis are the same. You can then leave out certain information in your samplesheet and supplement this information through the command line. Please note that in the given samplesheet, the columns \"Samples\", \"Virus\", and \"Reference\" are considered to be mandatory. starting an analysis without this information in the samplesheet will not work.","title":"Run a multi-target analysis"},{"location":"primers/","text":"Formatting your input primers \u00b6 ViroConstrictor has two options for primer input: BED and fasta . In order to get optimal results, please make sure the fasta headers in your fasta file with primers are formatted properly. This also counts for the name column in your BED file. The strand column of the BED file is leading in determining the orientation of the primer. Please make sure the fasta headers/name column are formatted according the following format: >{primer-name}_{primer-number}_{orientation} It's important that the primers which together form a single amplicon have the same primer-name and number. Orientation keywords for forward primers are: \"LEFT\" / \"PLUS\" / \"POSITIVE\" / \"FORWARD\" Orientation keywords for reverse primers are: \"RIGHT\" / \"MINUS\" / \"NEGATIVE\" / \"REVERSE\" Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol >nCoV-2019_1_LEFT ACCAACCAACTTTCGATCTCTTGT >nCoV-2019_1_RIGHT CATCTTTAAGATGTTGACGTGCCTC >nCoV-2019_2_LEFT CTGTTTTACAGGTTCGCGACGT >nCoV-2019_2_RIGHT TAAGGATCAGTGCCAAGCTCGT If your protocol has alternative primers then make sure the fasta header contains the \"alt\" keyword in the following format: >{primer-name}_{primer-number}_alt_{orientation} Please make sure the \"alt\" keyword is in the middle and not at the end of the fasta header. Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol with alternative primers included >nCoV-2019_13_LEFT TCGCACAAATGTCTACTTAGCTGT >nCoV-2019_13_RIGHT ACCACAGCAGTTAAAACACCCT >nCoV-2019_14_LEFT CATCCAGATTCTGCCACTCTTGT >nCoV-2019_14_alt_LEFT TGGCAATCTTCATCCAGATTCTGC >nCoV-2019_14_RIGHT AGTTTCCACACAGACAGGCATT >nCoV-2019_14_alt_RIGHT TGCGTGTTTCTTCTGCATGTGC >nCoV-2019_15_LEFT ACAGTGCTTAAAAAGTGTAAAAGTGCC >nCoV-2019_15_alt_LEFT AGTGCTTAAAAAGTGTAAAAGTGCCT >nCoV-2019_15_RIGHT AACAGAAACTGTAGCTGGCACT >nCoV-2019_15_alt_RIGHT ACTGTAGCTGGCACTTTGAGAGA","title":"Formatting input primers"},{"location":"primers/#formatting-your-input-primers","text":"ViroConstrictor has two options for primer input: BED and fasta . In order to get optimal results, please make sure the fasta headers in your fasta file with primers are formatted properly. This also counts for the name column in your BED file. The strand column of the BED file is leading in determining the orientation of the primer. Please make sure the fasta headers/name column are formatted according the following format: >{primer-name}_{primer-number}_{orientation} It's important that the primers which together form a single amplicon have the same primer-name and number. Orientation keywords for forward primers are: \"LEFT\" / \"PLUS\" / \"POSITIVE\" / \"FORWARD\" Orientation keywords for reverse primers are: \"RIGHT\" / \"MINUS\" / \"NEGATIVE\" / \"REVERSE\" Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol >nCoV-2019_1_LEFT ACCAACCAACTTTCGATCTCTTGT >nCoV-2019_1_RIGHT CATCTTTAAGATGTTGACGTGCCTC >nCoV-2019_2_LEFT CTGTTTTACAGGTTCGCGACGT >nCoV-2019_2_RIGHT TAAGGATCAGTGCCAAGCTCGT If your protocol has alternative primers then make sure the fasta header contains the \"alt\" keyword in the following format: >{primer-name}_{primer-number}_alt_{orientation} Please make sure the \"alt\" keyword is in the middle and not at the end of the fasta header. Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol with alternative primers included >nCoV-2019_13_LEFT TCGCACAAATGTCTACTTAGCTGT >nCoV-2019_13_RIGHT ACCACAGCAGTTAAAACACCCT >nCoV-2019_14_LEFT CATCCAGATTCTGCCACTCTTGT >nCoV-2019_14_alt_LEFT TGGCAATCTTCATCCAGATTCTGC >nCoV-2019_14_RIGHT AGTTTCCACACAGACAGGCATT >nCoV-2019_14_alt_RIGHT TGCGTGTTTCTTCTGCATGTGC >nCoV-2019_15_LEFT ACAGTGCTTAAAAAGTGTAAAAGTGCC >nCoV-2019_15_alt_LEFT AGTGCTTAAAAAGTGTAAAAGTGCCT >nCoV-2019_15_RIGHT AACAGAAACTGTAGCTGGCACT >nCoV-2019_15_alt_RIGHT ACTGTAGCTGGCACTTTGAGAGA","title":"Formatting your input primers"},{"location":"user-guide/","text":"User Guide \u00b6 Once ViroConstrictor is installed you can use it to analyse your NGS FastQ data. To run an analysis, you need the following inputs: Input FASTQ data Reference fasta Used sequencing primers in correct format Sequencing platform Amplicon-type Preparing your input primers \u00b6 ViroConstrictor has two options for primer input: BED and fasta . The BED format specifies the coordinates of the primers with respect to the given reference genome. In order to get optimal results, please make sure the fasta headers in your fasta file are formatted properly. This also counts for the name column in your bed file. Please make sure the headers are formatted according the following format: >{primer-name}_{primer-number}_{orientation} It's important that the primers which together form a single amplicon have the same primer-name and number. Orientation keywords for forward primers are: \"LEFT\" / \"PLUS\" / \"POSITIVE\" / \"FORWARD\" Orientation keywords for reverse primers are: \"RIGHT\" / \"MINUS\" / \"NEGATIVE\" / \"REVERSE\" Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol >nCoV-2019_1_LEFT ACCAACCAACTTTCGATCTCTTGT >nCoV-2019_1_RIGHT CATCTTTAAGATGTTGACGTGCCTC >nCoV-2019_2_LEFT CTGTTTTACAGGTTCGCGACGT >nCoV-2019_2_RIGHT TAAGGATCAGTGCCAAGCTCGT If your protocol has alternative primers then make sure the fasta header contains the \"alt\" keyword in the following format: >{primer-name}_{primer-number}_alt_{orientation} Please make sure the \"alt\" keyword is in the middle and not at the end of the fasta header. Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol with alternative primers included >nCoV-2019_13_LEFT TCGCACAAATGTCTACTTAGCTGT >nCoV-2019_13_RIGHT ACCACAGCAGTTAAAACACCCT >nCoV-2019_14_LEFT CATCCAGATTCTGCCACTCTTGT >nCoV-2019_14_alt_LEFT TGGCAATCTTCATCCAGATTCTGC >nCoV-2019_14_RIGHT AGTTTCCACACAGACAGGCATT >nCoV-2019_14_alt_RIGHT TGCGTGTTTCTTCTGCATGTGC >nCoV-2019_15_LEFT ACAGTGCTTAAAAAGTGTAAAAGTGCC >nCoV-2019_15_alt_LEFT AGTGCTTAAAAAGTGTAAAAGTGCCT >nCoV-2019_15_RIGHT AACAGAAACTGTAGCTGGCACT >nCoV-2019_15_alt_RIGHT ACTGTAGCTGGCACTTTGAGAGA Amplicon types \u00b6 The \"amplicon type\" is basically a description of a PCR amplicon, and which part of said amplicon is actually sequenced. This information is important because given primers will be removed from the reads during the analysis. In the ViroConstrictor pipeline the primer-removal is done by our tool AmpliGone . The information regarding the \"amplicon type\" is required because it tells te pipeline, and therefore also AmpliGone, from which side(s) of a read the primer-sequence has to be removed. Currently there are two options: \"End-to-End\" or \"End-to-Mid\". In short: \"End-to-End\" means that the sequenced read covers the full length of an amplicon. Meaning that the primer-sequence is present at both ends of a read. \"End-to-Mid\" means that the sequences read only partially covers the length of the amplicon. Meaning that the primer-sequence is present at only one end of a read. Also see the AmpliGone documentation regarding amplicon-types where we go into more detail regarding these types and what these terms mean. Please check your sequencing and laboratory setup for the amplicon type to match your analysis to ensure the best results. Running an analysis \u00b6 Please also see the command-line help document for a quick explanation of every possible argument: viroconstrictor -h You can start an analysis with a command such as the following: viroconstrictor \\ --input { path/to/FastQ-files } \\ --output { path/to/desired/output/folder } \\ --primers { path/to/primers.fasta / NONE } \\ --platform { nanopore/illumina/iontorrent } \\ --amplicon-type { end-to-end/end-to-mid } \\ --threads { threads } Here, threads refers to the amount of threads that ViroConstrictor may use on your LOCAL machine. If you're using ViroConstrictor on a HPC/cluster then these threads will only be used during the pre-processing steps. If you're using ViroConstrictor on your local machine then the given amount of threads will act as a 'ceiling' of usable threads during analysis. If your sequencing protocol does not use primers then set \"NONE\" for the primers flag with --primers NONE . Below, you can find a brief summary if all available command line options and their meaning. Command Argument Explanation --input / -i [input directory] This is the folder containing your input fastq files. Both absolute as relative paths are supported. --output / -o [output directory] This is the desired output folder with all data and results. If the desired folder doesn't exist yet then it will be created. --reference / -ref [reference fasta] Input reference sequence genome in FASTA format --primers / -pr [primer fasta] / NONE Used primer sequences in FASTA format. Use NONE if your sequencing protocol does not use primers --platform nanopore / illumina / iontorrent The sequencing platform that was used to generate the dataset. Either being 'nanopore', 'illumina' or 'iontorrent'. Default is nanopore --amplicon-type / -at end-to-end / end-to-mid The amplicon type that matches your sequencing experiment/protocol. Either being end-to-end or end-to-mid --primer-mismatch-rate / -pmr number of maximum mismatches The maximum amount of mismatches that are tolerated during the primer search. Mismatches are counted in substitutions between primer and reference. Insertions and/or deletions are not taken into account. Default maximum amount of mismatches is 3 --features / -gff [GFF file] / NONE A GFF3 file that contains the Open Reading Frame information of the given reference. Use NONE if you don't have access to a GFF3 file with this information --threads / -t Amount of threads Number of local threads that are available to use. Default is the number of available threads in your system --dryrun N/A Run the ViroConstrictor workflow without actually doing anything. (default: False) --version / -v N/A Shows the current version of ViroConstrictor and exits --help / -h N/A Show the ViroConstrictor help document and exits","title":"User Guide"},{"location":"user-guide/#user-guide","text":"Once ViroConstrictor is installed you can use it to analyse your NGS FastQ data. To run an analysis, you need the following inputs: Input FASTQ data Reference fasta Used sequencing primers in correct format Sequencing platform Amplicon-type","title":"User Guide"},{"location":"user-guide/#preparing-your-input-primers","text":"ViroConstrictor has two options for primer input: BED and fasta . The BED format specifies the coordinates of the primers with respect to the given reference genome. In order to get optimal results, please make sure the fasta headers in your fasta file are formatted properly. This also counts for the name column in your bed file. Please make sure the headers are formatted according the following format: >{primer-name}_{primer-number}_{orientation} It's important that the primers which together form a single amplicon have the same primer-name and number. Orientation keywords for forward primers are: \"LEFT\" / \"PLUS\" / \"POSITIVE\" / \"FORWARD\" Orientation keywords for reverse primers are: \"RIGHT\" / \"MINUS\" / \"NEGATIVE\" / \"REVERSE\" Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol >nCoV-2019_1_LEFT ACCAACCAACTTTCGATCTCTTGT >nCoV-2019_1_RIGHT CATCTTTAAGATGTTGACGTGCCTC >nCoV-2019_2_LEFT CTGTTTTACAGGTTCGCGACGT >nCoV-2019_2_RIGHT TAAGGATCAGTGCCAAGCTCGT If your protocol has alternative primers then make sure the fasta header contains the \"alt\" keyword in the following format: >{primer-name}_{primer-number}_alt_{orientation} Please make sure the \"alt\" keyword is in the middle and not at the end of the fasta header. Example of formatted primer names from the ArticV3 SARS-CoV-2 sequencing protocol with alternative primers included >nCoV-2019_13_LEFT TCGCACAAATGTCTACTTAGCTGT >nCoV-2019_13_RIGHT ACCACAGCAGTTAAAACACCCT >nCoV-2019_14_LEFT CATCCAGATTCTGCCACTCTTGT >nCoV-2019_14_alt_LEFT TGGCAATCTTCATCCAGATTCTGC >nCoV-2019_14_RIGHT AGTTTCCACACAGACAGGCATT >nCoV-2019_14_alt_RIGHT TGCGTGTTTCTTCTGCATGTGC >nCoV-2019_15_LEFT ACAGTGCTTAAAAAGTGTAAAAGTGCC >nCoV-2019_15_alt_LEFT AGTGCTTAAAAAGTGTAAAAGTGCCT >nCoV-2019_15_RIGHT AACAGAAACTGTAGCTGGCACT >nCoV-2019_15_alt_RIGHT ACTGTAGCTGGCACTTTGAGAGA","title":"Preparing your input primers"},{"location":"user-guide/#amplicon-types","text":"The \"amplicon type\" is basically a description of a PCR amplicon, and which part of said amplicon is actually sequenced. This information is important because given primers will be removed from the reads during the analysis. In the ViroConstrictor pipeline the primer-removal is done by our tool AmpliGone . The information regarding the \"amplicon type\" is required because it tells te pipeline, and therefore also AmpliGone, from which side(s) of a read the primer-sequence has to be removed. Currently there are two options: \"End-to-End\" or \"End-to-Mid\". In short: \"End-to-End\" means that the sequenced read covers the full length of an amplicon. Meaning that the primer-sequence is present at both ends of a read. \"End-to-Mid\" means that the sequences read only partially covers the length of the amplicon. Meaning that the primer-sequence is present at only one end of a read. Also see the AmpliGone documentation regarding amplicon-types where we go into more detail regarding these types and what these terms mean. Please check your sequencing and laboratory setup for the amplicon type to match your analysis to ensure the best results.","title":"Amplicon types"},{"location":"user-guide/#running-an-analysis","text":"Please also see the command-line help document for a quick explanation of every possible argument: viroconstrictor -h You can start an analysis with a command such as the following: viroconstrictor \\ --input { path/to/FastQ-files } \\ --output { path/to/desired/output/folder } \\ --primers { path/to/primers.fasta / NONE } \\ --platform { nanopore/illumina/iontorrent } \\ --amplicon-type { end-to-end/end-to-mid } \\ --threads { threads } Here, threads refers to the amount of threads that ViroConstrictor may use on your LOCAL machine. If you're using ViroConstrictor on a HPC/cluster then these threads will only be used during the pre-processing steps. If you're using ViroConstrictor on your local machine then the given amount of threads will act as a 'ceiling' of usable threads during analysis. If your sequencing protocol does not use primers then set \"NONE\" for the primers flag with --primers NONE . Below, you can find a brief summary if all available command line options and their meaning. Command Argument Explanation --input / -i [input directory] This is the folder containing your input fastq files. Both absolute as relative paths are supported. --output / -o [output directory] This is the desired output folder with all data and results. If the desired folder doesn't exist yet then it will be created. --reference / -ref [reference fasta] Input reference sequence genome in FASTA format --primers / -pr [primer fasta] / NONE Used primer sequences in FASTA format. Use NONE if your sequencing protocol does not use primers --platform nanopore / illumina / iontorrent The sequencing platform that was used to generate the dataset. Either being 'nanopore', 'illumina' or 'iontorrent'. Default is nanopore --amplicon-type / -at end-to-end / end-to-mid The amplicon type that matches your sequencing experiment/protocol. Either being end-to-end or end-to-mid --primer-mismatch-rate / -pmr number of maximum mismatches The maximum amount of mismatches that are tolerated during the primer search. Mismatches are counted in substitutions between primer and reference. Insertions and/or deletions are not taken into account. Default maximum amount of mismatches is 3 --features / -gff [GFF file] / NONE A GFF3 file that contains the Open Reading Frame information of the given reference. Use NONE if you don't have access to a GFF3 file with this information --threads / -t Amount of threads Number of local threads that are available to use. Default is the number of available threads in your system --dryrun N/A Run the ViroConstrictor workflow without actually doing anything. (default: False) --version / -v N/A Shows the current version of ViroConstrictor and exits --help / -h N/A Show the ViroConstrictor help document and exits","title":"Running an analysis"}]}